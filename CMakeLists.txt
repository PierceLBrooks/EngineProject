cmake_minimum_required(VERSION 3.21.0 FATAL_ERROR)

set(BUILD_VERSION "0.1")

set(BUILD_LANGUAGES )
if (NOT "${BUILD_INSTALL_PREFIX}" STREQUAL "")
    if (NOT IS_ABSOLUTE "${BUILD_INSTALL_PREFIX}")
        set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/${BUILD_INSTALL_PREFIX}")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${BUILD_INSTALL_PREFIX}/bin")
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${BUILD_INSTALL_PREFIX}/bin")
    else()
        set(CMAKE_INSTALL_PREFIX "${BUILD_INSTALL_PREFIX}")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${BUILD_INSTALL_PREFIX}/bin")
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${BUILD_INSTALL_PREFIX}/bin")
    endif()
else()
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
endif()
if (APPLE)
    list(APPEND BUILD_LANGUAGES "C")
    list(APPEND BUILD_LANGUAGES "CXX")
    list(APPEND BUILD_LANGUAGES "OBJC")
    list(APPEND BUILD_LANGUAGES "OBJCXX")
    if ("${CMAKE_GENERATOR}" STREQUAL "Xcode")
        execute_process(COMMAND uname -m OUTPUT_VARIABLE UNAME_M ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)
        if (NOT "$ENV{SYSROOT}" STREQUAL "")
            set(SYSROOT "$ENV{SYSROOT}")
        else()
            execute_process(COMMAND xcodebuild -version -sdk macosx Path OUTPUT_VARIABLE SYSROOT ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)
        endif()
        if (NOT EXISTS "${SYSROOT}")
            message(FATAL_ERROR "SYSROOT does not exist!")
        endif()
        set(CMAKE_OSX_SYSROOT "${SYSROOT}")
        if ("${CMAKE_OSX_ARCHITECTURES}" STREQUAL "")
            if ("${UNAME_M}" MATCHES "arm")
                set(CMAKE_OSX_ARCHITECTURES "arm64")
            else()
                set(CMAKE_OSX_ARCHITECTURES "$(ARCHS_STANDARD)")
            endif()
        endif()
    endif()
else()
    list(APPEND BUILD_LANGUAGES "C")
    list(APPEND BUILD_LANGUAGES "CXX")
    if (MINGW)
        list(APPEND BUILD_LANGUAGES "RC")
    endif()
endif()

project(EngineProject VERSION ${BUILD_VERSION} LANGUAGES ${BUILD_LANGUAGES})

set(BEP_DEF )
set(BEP_LIB )

list(APPEND BEP_DEF "_CONSOLE")

if (NOT "${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    set(CMAKE_DEBUG_POSTFIX "${CMAKE_BUILD_TYPE}")
    list(APPEND BEP_DEF "_DEBUG")
else()
    list(APPEND BEP_DEF "NDEBUG")
endif()

if (WINDOWS)
    if ("$ENV{PROCESSOR_ARCHITECTURE}" MATCHES "64")
        list(APPEND BEP_DEF "BITNESS_64")
    endif()
    if ("$ENV{PROCESSOR_ARCHITECTURE}" MATCHES "ARM")
        list(APPEND BEP_DEF "ARCH_ARM")
    endif()
    list(APPEND BEP_DEF "OS_WINDOWS")
else()
    execute_process(COMMAND ${CMAKE_CURRENT_LIST_DIR}/config.guess OUTPUT_VARIABLE CONFIG_GUESS ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)
    if ("${CONFIG_GUESS}" MATCHES "64")
        list(APPEND BEP_DEF "BITNESS_64")
    endif()
    if ("${CONFIG_GUESS}" MATCHES "arm" OR "${CONFIG_GUESS}" MATCHES "aarch")
        list(APPEND BEP_DEF "ARCH_ARM")
    endif()
    if (APPLE)
        list(APPEND BEP_DEF "OS_APPLE")
    else()
        list(APPEND BEP_DEF "OS_LINUX")
    endif()
endif()

set(BUILD_SHARED_LIBS ON)

add_subdirectory(ext)

file(GLOB BEP_SRC "${CMAKE_CURRENT_LIST_DIR}/src/*.c*")
file(GLOB BEP_INC "${CMAKE_CURRENT_LIST_DIR}/src/*.h*")
find_package(Threads REQUIRED)
list(APPEND BEP_LIB SDL3::SDL3)
list(APPEND BEP_LIB Threads::Threads)
include_directories(${CMAKE_CURRENT_LIST_DIR}/src)
include_directories(${CMAKE_CURRENT_LIST_DIR}/ext/SDL/include/SDL3)
include_directories(${CMAKE_CURRENT_LIST_DIR}/ext/SDL/include)
add_executable(${PROJECT_NAME} ${BEP_SRC} ${BEP_INC})
add_dependencies(${PROJECT_NAME} SDL3::SDL3)
target_link_libraries(${PROJECT_NAME} PUBLIC ${BEP_LIB})
target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_14)
target_compile_definitions(${PROJECT_NAME} PRIVATE ${BEP_DEF})
set_target_properties(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX)
if (APPLE)
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_INSTALL_NAME_TOOL} -add_rpath "@executable_path/" $<TARGET_FILE:${PROJECT_NAME}> || :)
endif()
if (NOT "${CMAKE_INSTALL_PREFIX}" STREQUAL "")
    install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/bin/${CMAKE_BUILD_TYPE})
endif()

